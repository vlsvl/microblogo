version: '3.7'

services:

  webserver:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./apps/users/:/var/www/users
      - ./apps/posts/:/var/www/posts
      - ./apps/microtest/:/var/www/microtest
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d
      - ./docker/nginx/ssl/:/etc/ssl/
    networks:
      - app-microtest

  postgres:
    image: postgres:alpine
    restart: always
    ports:
      - ${DB_PORT:-5432}:5432
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USERNAME}'
    volumes:
      - ./docker/pgsql/:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    networks:
     - app-microtest

# ************************
# *****              *****
# *****   SERVICES   *****
# *****              *****
# ************************
  users:
    image: idleo/lardo:latest
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: users
      SERVICE_TAGS: dev
      PHPFPM_CHDIR: /var/www/users/public
      # XDEBUG_MODE: debug,develop,coverage
      # XDEBUG_CONFIG: '172.17.0.1'
    working_dir: /var/www/users
    volumes:
      - ./apps/users/:/var/www/users
    networks:
      - app-microtest

  posts:
    image: idleo/lardo:latest
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: posts
      SERVICE_TAGS: dev
      PHPFPM_CHDIR: /var/www/posts/public
      # XDEBUG_MODE: debug,develop,coverage
      # XDEBUG_CONFIG: '172.17.0.1'
    working_dir: /var/www/posts
    volumes:
      - ./apps/posts/:/var/www/posts
    networks:
      - app-microtest

  microtest:
    image: node:16-alpine
    restart: always
    user: 'node'
    working_dir: /home/node/app
    ports:
      - 3000:3000
    volumes:
      - ./apps/microtest/:/home/node/app
    command: "npm run dev"
    environment:
      NUXT_HOST: 0.0.0.0
      NUXT_PORT: 3000
    networks:
      - app-microtest


networks:
  app-microtest:
    driver: bridge

volumes:
  postgres:
